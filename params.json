{
  "name": "PHPChain",
  "tagline": "Create chains with reusable steps for better domain logic structure",
  "body": "# phpchain [![Build Status](https://travis-ci.org/aambrozkiewicz/phpchain.svg?branch=master)](https://travis-ci.org/aambrozkiewicz/phpchain)\r\nSet of classes that help to create chains of steps to minimize clutter in domain logic.\r\n\r\n## Install\r\n`composer require aambr/phpchain`\r\n\r\n## Quick start\r\nStart with definition of a chain, each step can be instance of `ChainStep` or string, which is resolved using injected dependency injection container.\r\n\r\n```php\r\n$dispatcher = new ChainDispatcher($dependencyInjectionContainer);\r\n$dispatcher->define('user.register', [\r\n  'Domain\\Steps\\CreateUserStep', \r\n  Domain\\Steps\\CreateProfileStep::class, \r\n  'sendWelcomeEmail'\r\n]); // all of these will be resolved by dependency container unless \r\n    // there is a concrete ChainStep object ready\r\n    \r\n$dispatcher->dispatch('user.register')->execute(new \\ArrayObject([\r\n  'username' => 'valid-username',\r\n  'email' => 'valid@email.com'\r\n])); // steps can modify \\ArrayObject (passed by reference)\r\n```\r\n\r\n`ChainDispatcher` accepts any dependency injection container which comply with [Container Interoperability](https://github.com/container-interop/container-interop) interface.\r\n\r\n## Divide and conquer\r\n\r\nThe goal is to devide complex domain logic into individual steps that can be reused in future processes.\r\nCreate your own steps by inheriting `ChainStep` and implement logic in `process(\\ArrayObject $input)`.\r\n\r\n## Share variables between steps\r\n\r\nSteps can share variables between each other by altering `$input` keys, which is possible because we \r\nare passing `\\ArrayObject` instance reference instead an array which is passed by value. For example\r\n`CreateUserStep` after successful action can set `$input['user'] = $createdUser`, which then can be used\r\nby `sendWelcomeEmail`.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}